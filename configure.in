dnl Process this file with autoconf to produce a configure script.
AC_INIT(server/idsad.c)

dnl Checks for important programs
AC_PROG_CC
AC_PROG_LN_S
AC_PROG_RANLIB
AC_PATH_PROG(AR, ar, /usr/bin/ar)
AC_PATH_PROG(SED, sed, /bin/sed)
AC_PATH_PROG(GREP, grep, /bin/grep)
AC_PATH_PROG(CHMOD, chmod, /bin/chmod)
AC_PATH_PROG(CP, cp, /bin/cp)
AC_PATH_PROG(LDCONFIG, ldconfig, /sbin/ldconfig)


AC_MSG_CHECKING([for struct ucred in sys/socket])
AC_TRY_COMPILE([#include <sys/socket.h>], [struct ucred test; int i=SO_PEERCRED; ], IDSA_HAVE_CRED=yes, IDSA_HAVE_CRED=no)
if test "$IDSA_HAVE_CRED" = "yes" ; then
  AC_DEFINE(IDSA_HAVE_CRED)
  AC_MSG_RESULT([yep, excellent])
else 
  AC_MSG_RESULT([nope, could be tricky])
fi

AC_MSG_CHECKING([for GNU network headers])
AC_TRY_COMPILE([#include <netinet/tcp.h>], [struct tcphdr test; test.source=1; ], GNUNET=yes, GNUNET=no)
if test "$GNUNET" = "yes" ; then
  AC_MSG_RESULT([found])
else
  AC_MSG_RESULT([nope])
fi
AC_SUBST(GNUNET)

AC_ARG_WITH(pamdir, [  --with-pamdir=DIRECTORY      Location of PAM modules], PAMDIR=$withval)
if test -z "$PAMDIR" ; then
  AC_CHECK_FILE(/lib/security/pam_deny.so, PAMDIR="/lib/security" )
fi
if test -z "$PAMDIR" ; then
  AC_CHECK_FILE(/usr/lib/pam_deny.so, PAMDIR="/usr/lib" )
fi
if test -z "$PAMDIR" ; then PAMDIR="no" ; fi
if test "$PAMDIR" != "no" ; then
  AC_TRY_COMPILE([#include <security/pam_modules.h>], [ int t=PAM_SUCCESS; ], [ test ], [ PAMDIR="no" ] )
fi
AC_SUBST(PAMDIR)


AC_ARG_WITH(guile-config, [  --with-guile-config=FILE     Location of guile-config to build idsaguile], GUILECONFIG=$withval)
if test -z "$GUILECONFIG" ; then
  AC_PATH_PROG(GUILECONFIG, guile-config, no)
fi
if test "$GUILECONFIG" != "no" ; then
  AC_CHECK_FILE($GUILECONFIG, test, GUILECONFIG="no")
fi
AC_SUBST(GUILECONFIG)


AC_ARG_WITH(apxs, [  --with-apxs=FILE             Location of apache apxs to build mod_idsa], APXS=$withval)
if test -z "$APXS" ; then
  AC_PATH_PROG(APXS, apxs, no)
fi
if test "$APXS" != "no" ; then
  AC_CHECK_FILE($APXS, test, APXS="no")
fi
AC_SUBST(APXS)


AC_ARG_WITH(gtk-config, [  --with-gtk-config=FILE       Location of gtk-config to build idsaguardgtk], GTKCONFIG=$withval)
if test -z "$GTKCONFIG" ; then
  AC_PATH_PROG(GTKCONFIG, gtk-config, no)
fi
if test "$GTKCONFIG" != "no"; then
  AC_CHECK_FILE($GTKCONFIG, test, GTKCONFIG="no")
fi
AC_SUBST(GTKCONFIG)

FALLBACK="yes"
AC_ARG_ENABLE(fallback, [  --enable-fallback            Enable static configuration files], FALLBACK=$withval)
AC_SUBST(FALLBACK)

DLDIR="yes"
AC_ARG_ENABLE(modules, [  --enable-modules[=DIRECTORY] Build IDS/A modules as DSOs         (requires dl interface)], DLDIR=$withval)
if test "$DLDIR" = "yes" ; then
  DLDIR="${libdir}/idsa"
fi 
if test "$DLDIR" != "no" ; then 
  AC_CHECK_LIB(c,  dlsym, DLLIB="-lc" ) 
  AC_CHECK_LIB(dl, dlsym, DLLIB="-ldl" ) 
  if test -z "$DLLIB" ; then
    DLDIR="no"
    DLLIB=""
  fi 
fi
AC_SUBST(DLDIR)
AC_SUBST(DLLIB)


KLOG="yes"
AC_ARG_ENABLE(standout, [  --enable-klogd               Build idsaklogd                     (requires /proc/kmsg)], KLOG=$enableval)
if test "$KLOG" != "no" ; then
  if test -f /proc/kmsg ; then
    KLOG="yes"
  else
    KLOG="no"
  fi
fi
AC_SUBST(KLOG)


STANDOUT="ncurses"
AC_ARG_ENABLE(standout, [  --enable-standout            Enable highlighting in idsaguardtty (requires ncurses)], STANDOUT=$enableval)
if test "$STANDOUT" != "no" ; then
  AC_TRY_COMPILE([#include <ncurses.h>], [ tigetstr("smso"); ], test, STANDOUT=no)
  AC_CHECK_LIB(ncurses, setupterm, test, STANDOUT="no" )
fi
AC_SUBST(STANDOUT)


dnl Provide some feedback

echo
echo "** Configuration ******************************"
echo

if test "$PAMDIR" = "no" ;then 
echo "PAM Module        : ( ) : use --with-pamdir=/some/directory to enable"
else 
echo "PAM Module        : (X) : will be installed in $PAMDIR"
fi

if test "$GUILECONFIG" = "no" ;then 
echo "Guile Interpreter : ( ) : use--with-guile-config=/some/file to enable"
else
echo "Guile Interpreter : (X) : using $GUILECONFIG to get settings"
fi

if test "$APXS" = "no" ;then
echo "Apache 1.3 Module : ( ) : use --with-apxs=/some/file to enable"
else 
echo "Apache 1.3 Module : (X) : using $APXS to get settings"
fi

if test "$KLOG" = "no" ;then 
echo "Klog Daemon       : ( ) : /proc/kmsg doesn't seem be available"
else
echo "Klog Daemon       : (X) : will read from /proc/kmsg"
fi

if test "$GNUNET" = "no" ;then 
echo "Network Utilties  : ( ) : GNU style network header files not available"
else
echo "Network Utilties  : (X) : will build idsatcpd and idsatcplogd"
fi

if test "$GTKCONFIG" = "no" ;then 
echo "GUI Guard         : ( ) : use --with-gtk-config=/some/file to enable"
else 
echo "GUI Guard         : (X) : using $GTKCONFIG to get settings"
fi

if test "$STANDOUT" = "no" ;then 
echo "TTY Guard Feature : ( ) : will use plain text"
else
echo "TTY Guard Feature : (X) : will use termcap to get terminal escapes"
fi

if test "$DLDIR" = "no" ;then 
echo "IDSA DSOs         : ( ) : unable to locate the dynamic loader interface"
else 
echo "IDSA DSOs         : (X) : will be installed in $DLDIR "
fi

if test "$FALLBACK" = "no" ;then 
echo "Static Files      : ( ) : will not fall back to static configuration files"
else
echo "Static Files      : (X) : will use static configuration files if server unavailable"
fi

if test "$IDSA_HAVE_CRED" = "no" ;then
echo "Trusted Path      : ( ) : you do not seem to have a trusted path - this reduces security"
else
echo "Trusted Path      : (X) : will authenticate peers"
fi

echo
echo "** All settings accessible in Makefile.defs ** "
echo "** For more information:   make -s info     ** "
echo

dnl This is the only file generated and can be edited by hand once created
AC_OUTPUT(Makefile.defs)

dnl Stuff of interest if it ever gets ported to something other than Linux
dnl AC_HEADER_STDC
dnl AC_HEADER_SYS_WAIT
dnl AC_CHECK_HEADERS(fcntl.h limits.h sys/time.h unistd.h)
dnl AC_C_CONST
dnl AC_TYPE_UID_T
dnl AC_TYPE_MODE_T
dnl AC_TYPE_PID_T
dnl AC_HEADER_TIME
dnl AC_STRUCT_TM
dnl AC_FUNC_MEMCMP
dnl AC_TYPE_SIGNAL
dnl AC_CHECK_FUNCS(select socket strdup strerror strtod uname)

